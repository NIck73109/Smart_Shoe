import controlP5.*;
import processing.serial.*;
import grafica.*;

// The serial port:
Serial USBport; 

ControlP5 cp5;
int numSensors = 30;
boolean USBenabled = false;
long timeNow, timeDelta;
double time1, time2;
String timeRecorded;
double[][][] data = new double[numSensors][50000][3];

double tempTime;

// Variables used to count the number of data values
int aC = 0; int bC = 0; int cC = 0; int dC = 0; int eC = 0; int fC = 0;
int gC = 0; int hC = 0; int iC = 0; int jC = 0; int kC = 0; int lC = 0;
int mC = 0; int nC = 0; int oC = 0; int pC = 0; int qC = 0; int rC = 0;
int sC = 0; int tC = 0; int uC = 0; int vC = 0; int wC = 0; int xC = 0;
int yC = 0; int zC = 0;

void setup(){
    size(500,500);
    background(255);
    cp5 = new ControlP5(this);
    
     cp5.addButton("enable")
       .setPosition(125,100)
       //.setImages(graphBtn)
       .setSize(250,50)
       .setCaptionLabel("Enable Serial Port")
       ;
       
    cp5.getController("enable")
       .getCaptionLabel()
       .toUpperCase(false)
       .setSize(30)
       ;

    println(Serial.list());
}
byte[] inBuffer = new byte[2];

void draw() {
  if (USBport != null){
  while (USBport.available() > 0 && USBenabled){
    
     //inBuffer = USBport.readBytes();
      USBport.readBytes(inBuffer);
      if (inBuffer != null) {
          timeDelta = System.nanoTime();
          time1 = (timeDelta - timeNow);
          time2 = time1/1000000; // Gives time in miliseconds
          int[] tempInput = new int[inBuffer.length];
          //double[] tempData = new double[inBuffer.length];
          int i = 0;
          println(inBuffer.length);
          while(i < 2){
             tempInput[i] = inBuffer[i] & 0xff;
             tempTime = time2; // timeRecorded
             println(tempInput[i]);
             i++;
          }
          sortData(tempInput,tempTime);                  
      }

  }
  }
}
/*------------------------------------------------------------------------------
 Button Events
-----------------------------------------------------------------------------*/ 
// Enables and disables serial reading
public void enable() {
  println("a button event from USBenable/disable");
  USBenabled = !USBenabled;
  if(!USBenabled){
    cp5.getController("enable").setCaptionLabel("Enable Serial Port");
  }
  else {
         try {
         USBport = new Serial(this,Serial.list()[0], 9600);
         println(Serial.list());
         } catch (Exception e) {
         e.printStackTrace();
         USBport = null;
         USBenabled = false;
         cp5.getController("enable").setCaptionLabel("Enable Serial Port");
       } 
    cp5.getController("enable").setCaptionLabel("Disable Serial Port");
    timeNow = System.nanoTime();
  }

}
/*------------------------------------------------------------------------------
 Sort Data
-----------------------------------------------------------------------------*/ 
// This function is used to sort data as it is received and returns
// a double three dimensional array called data[][][], where the first
// bracket refers to the sensor number, the second refers to the entry
// for each sensor and the third refers to the data type, [0] for force,
// [1] for time, and [2] for the number of values per sensor
// TODO: add ArrayList to replace the array as dynamic arrays cannot be created in Java
void sortData(int input[],double time){
  if (input.length == 2){ 
    if(input[0] == 1){
        println(aC);  
        data[0][aC][0] = (double) input[1];
        data[0][aC][1] = time;
        data[0][0][2] = aC;
        aC++;    
    } else if (input[0] == 2){
        println("bC = " + bC);  
        data[1][bC][0] = (double) input[1];
        data[1][bC][1] = time;
        data[1][0][2] = bC;
        bC++;
    } else if (input[0] == 3){
        println("cC = " + cC); 
        data[2][cC][0] = input[1];
        data[2][cC][1] = time;
        data[2][0][2] = cC;
        cC++;
    } else if (input[0] == 4){ 
        println("dC = " + dC);
        data[3][dC][0] = input[1];
        data[3][dC][1] = time;
        data[3][0][2] = dC;
        dC++;
    } else { // No identifier  
        println("Missing ID!");  
    }  
  } 
  
}

